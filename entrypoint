#!/bin/bash
set -e
export DEBIAN_FRONTEND=noninteractive

FTP_USER=${FTP_USER:-"app"}

if [[ ! -z "$AWS_REGION" ]]; then
    AWS_REGION="us-west-1"
fi

# Create users only on first run
if $(cat /etc/passwd | cut -d: -f1 | grep -q "^$FTP_USER"); then
    echo "user $FTP_USER is already exist"
else
    #create user
    groupadd -g 1000 $FTP_USER
    useradd -m -s /bin/bash -u 1000 -g $FTP_USER $FTP_USER
    usermod -p "*" $FTP_USER

    mkdir -p /home/$FTP_USER/.ssh
    chmod 700 /home/$FTP_USER/.ssh/

    # Change SSH Host Key's PATH
    if [[ ! -z "$SSH_HOST_KEYS_DIR" ]]; then
      tmp_dir=$(echo $SSH_HOST_KEYS_DIR | sed 's/\//\\\//g')
      sed -E -i "s/#?HostKey \/etc\/ssh/HostKey $tmp_dir/g" /etc/ssh/sshd_config
    else
      # Generate Host keys, if required
      if ! ls /etc/ssh/ssh_host_* 1> /dev/null 2>&1; then
        ssh-keygen -A
      fi
    fi

    if [ -f /root/authorized_keys ]; then
        cp /root/authorized_keys /home/$FTP_USER/.ssh/authorized_keys
    fi

    # Add SSH keys to authorized_keys with valid permissions
    if [ -d /home/$FTP_USER/.ssh/keys ]; then
        cat /home/$FTP_USER/.ssh/keys/* >> /home/$FTP_USER/.ssh/authorized_keys
        chown $FTP_USER /home/$FTP_USER/.ssh/authorized_keys
        chmod 600 /home/$FTP_USER/.ssh/authorized_keys
    fi

    chown -R $FTP_USER:$FTP_USER /home/$FTP_USER/.ssh/

    # Make sure dirs exists and has correct permissions
    MOUNT_PATH="/mnt/home/$FTP_USER"
    if [[ ! -d $MOUNT_PATH ]]; then
      mkdir -p $MOUNT_PATH
      chown $FTP_USER:$FTP_USER $MOUNT_PATH
    fi
fi

#s3fs_fuse filesystem - only supported in single-user + dir scenario

eval /usr/bin/s3fs -o allow_other,uid=1000,gid=1000,umask=007 -o use_cache=/tmp -o endpoint=$AWS_REGION $S3_BUCKET_NAME /mnt/home/$FTP_USER

echo "DEBUG: finished running s3fs"

exec /usr/sbin/sshd -D -e -g 240
